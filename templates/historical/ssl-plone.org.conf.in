# This file is generated by buildout
    upstream crawler {server 127.0.0.1:5018;}
    upstream staging {server 10.57.0.107:6011;}

    # pass https://staging.plone.org to the staging instance
    server {
        # set a flag if we're serving to a bot
        if ($http_user_agent ~ (ia_archiver|Yandex|Slurp|Googlebot|Baiduspider|Mediapartners|msnbot|curl|Wget)) {
            set $is_a_bot 1;
        }

        listen 443;
        server_name staging.plone.org;
        ssl on;
        ssl_certificate /usr/local/etc/nginx/ssl.crt/wildcard.crt;
        ssl_certificate_key /usr/local/etc/nginx/ssl.key/wildcard.key;
        root /srv/staging.plone.org/static;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_types text/xml text/plain application/xml;

        client_max_body_size 10M;

        location / {
            rewrite ^/(.*)$ /VirtualHostBase/https/staging.plone.org:443/plone.org/VirtualHostRoot/$1 break;
            if ( $is_a_bot = 1 ) {
                proxy_pass http://crawler;
            }
            proxy_pass http://staging;
        }
        location ~ ^/products/(simple|links|\+\+simple\+\+)/?$ {
            rewrite ^    http://dist.plone.org/packages permanent;
        }
        location ~ ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ {
            rewrite ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ /dist.plone.org/packages/$3$4;
        }

    }

    server {
	# set a flag if we're serving to a bot
	if ($http_user_agent ~ (ia_archiver|Yandex|Slurp|Googlebot|Baiduspider|Mediapartners|msnbot|curl|Wget)) {
		set $is_a_bot 1;
	}
        listen 443;
        server_name plone.org;
        ssl     on;
        ssl_certificate /usr/local/etc/nginx/ssl.crt/wildcard.crt;
        ssl_certificate_key /usr/local/etc/nginx/ssl.key/wildcard.key;
        keepalive_timeout       70;
        root /srv/plone.org/static;

        location = /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        gzip             on;
        gzip_min_length  1000;
        gzip_proxied     any;
        gzip_types       text/xml text/plain application/xml;

        client_max_body_size 10M;

        # increase proxy buffer size to avoid problems with HTMLParser
        proxy_buffers 8 256k;
        proxy_buffer_size 256k;

        # Push this to varnish to avoid problems
        # error_page 500 /500.html;
        location = /500.html {  }

        location / {
            rewrite ^/(.*)$ /VirtualHostBase/https/plone.org:443/plone.org/VirtualHostRoot/$1 break;
            if ( $is_a_bot = 1 ) {
		        proxy_pass http://crawler;
	        }
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
        location ~ ^/products/(simple|links|\+\+simple\+\+)/?$ {
            rewrite ^    http://dist.plone.org/packages permanent;
        }
        location /dist.plone.org {
            internal;
            # autoindex on;
            alias /srv/dist.plone.org/http/root/;
        }
        location ~ ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ {
            rewrite ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ /dist.plone.org/packages/$3$4;
        }
	location /mailman/ {
	proxy_pass http://127.0.0.1:80/;
	proxy_set_header Host $host;
	}
        location /admin/ {
        proxy_pass http://127.0.0.1:80/admin/;
        proxy_set_header Host $host;
        }
        location /admindb/ {
        proxy_pass http://127.0.0.1:80/admindb/;
        proxy_set_header Host $host;
        }
	location /icons {
	alias /usr/local/mailman/icons;
	}
	location /pipermail {
	alias /usr/local/mailman/archives/public;
	autoindex on;
	}
    }
